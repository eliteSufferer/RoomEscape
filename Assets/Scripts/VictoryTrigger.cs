using UnityEngine;
using UnityEngine.SceneManagement;

public class VictoryTrigger : MonoBehaviour
{
    [Header("Victory Settings")]
    public bool doorMustBeOpen = true; // –î–≤–µ—Ä—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç–∞
    public ExitDoor exitDoor; // –°—Å—ã–ª–∫–∞ –Ω–∞ –¥–≤–µ—Ä—å
    // public float delayBeforeRestart = 3f;
    
    [Header("Victory UI")]
    public GameObject victoryPanel; // UI –ø–∞–Ω–µ–ª—å –ø–æ–±–µ–¥—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    
    void Start()
    {
        // –¢—Ä–∏–≥–≥–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω
        GetComponent<Collider>().isTrigger = true;
    }
    
    void OnTriggerEnter(Collider other)
    {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –∏–≥—Ä–æ–∫
        if (other.CompareTag("Player"))
        {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ –ø–æ–±–µ–¥—ã
            if (CanWin())
            {
                TriggerVictory();
            }
            else
            {
                Debug.Log("–î–≤–µ—Ä—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç–∞!");
            }
        }
    }
    
    bool CanWin()
    {
        if (!doorMustBeOpen) return true;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–≤–µ—Ä—å –æ—Ç–∫—Ä—ã—Ç–∞ –∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞
        if (exitDoor != null)
        {
            return !exitDoor.isLocked && exitDoor.isOpen;
        }
        
        return true; // –ï—Å–ª–∏ –¥–≤–µ—Ä—å –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞, —Å—á–∏—Ç–∞–µ–º —á—Ç–æ –º–æ–∂–Ω–æ
    }
    
    void TriggerVictory()
    {
        Debug.Log("üéâ –ü–û–ë–ï–î–ê! –í—ã –≤—ã–±—Ä–∞–ª–∏—Å—å –∏–∑ –∫–æ–º–Ω–∞—Ç—ã! üéâ");
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º UI –ø–∞–Ω–µ–ª—å –ø–æ–±–µ–¥—ã
        if (victoryPanel != null)
        {
            victoryPanel.SetActive(true);
            Cursor.lockState = CursorLockMode.None;
            Cursor.visible = true;
        }
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–≥—Ä—É –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —É—Ä–æ–≤–µ–Ω—å
        // Invoke("RestartLevel", delayBeforeRestart);
    }
    
    void RestartLevel()
    {
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ü–µ–Ω—É –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        Time.timeScale = 1f; // –ù–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –±—ã–ª–∞ –ø–∞—É–∑–∞
        SceneManager.LoadScene(SceneManager.GetActiveScene().name);
        
        // –ò–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:
        // SceneManager.LoadScene("MainMenu");
    }
    
    // –ü—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è UI –∫–Ω–æ–ø–æ–∫
    public void RestartGame()
    {
        SceneManager.LoadScene("MainMenu");
    }
    
    public void QuitGame()
    {
        Application.Quit();
    }
}