using UnityEngine;

public class Television : MonoBehaviour, IInteractable
{
    [Header("TV Settings")]
    public bool isOn = true;  // üî• –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –≤–∫–ª—é—á–µ–Ω
    public bool isFixed = false;
    
    [Header("Screen Materials")]
    public Material offMaterial;      // –ß–µ—Ä–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª
    public Material staticMaterial;   // –ú–∞—Ç–µ—Ä–∏–∞–ª —Å –ø–æ–º–µ—Ö–∞–º–∏
    public Material codeMaterial;     // –ú–∞—Ç–µ—Ä–∏–∞–ª —Å –∫–æ–¥–æ–º
    
    [Header("Audio")]
    public AudioSource audioSource;
    public AudioClip switchSound;     // üî• –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–ª–∏: –∑–≤—É–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
    public AudioClip staticSound;

    [Header("Screen Settings")]
    public Renderer screenRenderer;
    public int screenMaterialIndex = 1;

    void Start()
    {
        // üî• –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–≥—Ä—ã –æ–±–Ω–æ–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω –∏ –∑–≤—É–∫
        UpdateScreen();
        StartInitialAudio();
    }

    void StartInitialAudio()
    {
        // –ï—Å–ª–∏ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä –≤–∫–ª—é—á–µ–Ω –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ - –∑–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ç–∏–∫
        if (isOn && !isFixed && staticSound != null && audioSource != null)
        {
            audioSource.clip = staticSound;
            audioSource.loop = true;
            audioSource.Play();
        }
    }

    void UpdateScreen()
    {
        if (screenRenderer == null) return;
        
        Material[] materials = screenRenderer.materials;
        
        if (!isOn)
            materials[screenMaterialIndex] = offMaterial;
        else if (!isFixed)
            materials[screenMaterialIndex] = staticMaterial;
        else
            materials[screenMaterialIndex] = codeMaterial;
            
        screenRenderer.materials = materials;
    }
    
    public void Interact()
    {
        TogglePower();
    }
    
    public string GetInteractionText()
    {
        return isOn ? "–í—ã–∫–ª—é—á–∏—Ç—å —Ç–µ–ª–µ–≤–∏–∑–æ—Ä" : "–í–∫–ª—é—á–∏—Ç—å —Ç–µ–ª–µ–≤–∏–∑–æ—Ä";
    }
    
    void TogglePower()
    {
        isOn = !isOn;
        UpdateScreen();
        PlaySounds();
    }
    
    void PlaySounds()
    {
        if (audioSource == null) return;
        
        // üî• –í–°–ï–ì–î–ê –∏–≥—Ä–∞–µ–º –∑–≤—É–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ (–ì–†–û–ú–ö–û!)
        if (switchSound != null)
        {
            audioSource.PlayOneShot(switchSound, 8.0f); // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≥—Ä–æ–º–∫–æ—Å—Ç—å –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
        }
        
        // –£–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏–∫–æ–º
        if (isOn && !isFixed)
        {
            // –í–∫–ª—é—á–∏–ª–∏ - –∑–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ç–∏–∫ (—Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π –ø–æ—Å–ª–µ –∑–≤—É–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è)
            if (staticSound != null)
            {
                Invoke("PlayStatic", 0.4f); // –ó–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–±–∏–≤–∞–ª –∑–≤—É–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
            }
        }
        else
        {
            // –í—ã–∫–ª—é—á–∏–ª–∏ –∏–ª–∏ –ø–æ—á–∏–Ω–µ–Ω - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç–∏–∫ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
            if (audioSource.clip == staticSound)
            {
                Invoke("StopStatic", 0.2f); // üî• –ó–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –∑–≤—É–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —É—Å–ø–µ–ª –ø—Ä–æ–∏–≥—Ä–∞—Ç—å—Å—è
            }
        }
    }
    
    void StopStatic()
    {
        if (audioSource != null && audioSource.clip == staticSound)
        {
            audioSource.Stop();
        }
    }
    
    void PlayStatic()
    {
        if (audioSource != null && staticSound != null && isOn && !isFixed)
        {
            audioSource.clip = staticSound;
            audioSource.loop = true;
            audioSource.Play();
        }
    }
    
    public void FixTV()
    {
        isFixed = true;
        UpdateScreen();
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç–∏–∫ –∫–æ–≥–¥–∞ –ø–æ—á–∏–Ω–∏–ª–∏ (—Ç–æ–∂–µ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        if (audioSource != null && audioSource.clip == staticSound)
        {
            StopStatic();
        }
        
        Debug.Log("–¢–µ–ª–µ–≤–∏–∑–æ—Ä –ø–æ—á–∏–Ω–µ–Ω! –ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω–µ.");
    }
}