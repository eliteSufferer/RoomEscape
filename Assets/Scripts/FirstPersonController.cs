using UnityEngine;

public class FirstPersonController : MonoBehaviour
{
    [Header("Movement")]
    public float walkSpeed = 5f;
    public float runSpeed = 10f;
    
    [Header("Mouse Look")]
    public float mouseSensitivity = 2f;
    public float upDownRange = 80f;
    
    private CharacterController characterController;
    private Camera playerCamera;
    private float verticalRotation = 0;
    
    void Start()
    {
        characterController = GetComponent<CharacterController>();
        playerCamera = GetComponentInChildren<Camera>();
        
        // –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫—É—Ä—Å–æ—Ä –≤ —Ü–µ–Ω—Ç—Ä–µ —ç–∫—Ä–∞–Ω–∞
        Cursor.lockState = CursorLockMode.Locked;
    }
    
    void Update()
    {
        // üî• –ù–û–í–ê–Ø –°–¢–†–û–ß–ö–ê: –ù–µ –¥–≤–∏–≥–∞—Ç—å—Å—è –∏ –Ω–µ –∫—Ä—É—Ç–∏—Ç—å –∫–∞–º–µ—Ä—É –Ω–∞ –ø–∞—É–∑–µ
        if (Time.timeScale == 0f) return;
        
        // –î–≤–∏–∂–µ–Ω–∏–µ –º—ã—à—å—é
        float mouseX = Input.GetAxis("Mouse X") * mouseSensitivity;
        float mouseY = Input.GetAxis("Mouse Y") * mouseSensitivity;
        
        // –ü–æ–≤–æ—Ä–æ—Ç –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
        transform.Rotate(0, mouseX, 0);
        
        // –ü–æ–≤–æ—Ä–æ—Ç –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
        verticalRotation -= mouseY;
        verticalRotation = Mathf.Clamp(verticalRotation, -upDownRange, upDownRange);
        playerCamera.transform.localRotation = Quaternion.Euler(verticalRotation, 0, 0);
        
        // –î–≤–∏–∂–µ–Ω–∏–µ WASD
        float speed = Input.GetKey(KeyCode.LeftShift) ? runSpeed : walkSpeed;
        
        float horizontal = Input.GetAxis("Horizontal");
        float vertical = Input.GetAxis("Vertical");
        
        Vector3 movement = transform.right * horizontal + transform.forward * vertical;
        characterController.Move(movement * speed * Time.deltaTime);
        
        // ESC –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫—É—Ä—Å–æ—Ä–∞ (—Ç–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ GameManager)
        // if (Input.GetKeyDown(KeyCode.Escape))
        // {
        //     Cursor.lockState = CursorLockMode.None;
        // }
    }
}